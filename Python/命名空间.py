#!/usr/env python
# -*- coding:utf8 -*-
__author__ = '李国征'
__email__ = "745292907@qq.com"

########################################################################################################
# 版本: python 3.6
# 编辑日期: 2019/02/25
# 功能: 命名空间的定义与说明
# 依赖包: python
# 运行方法: python decorator.py
########################################################################################################

"""
什么是命名空间？
代码在运行伊始，创建的存储“变量名与值的关系”的空间叫做【全局命名空间】，
    在函数的运行中开辟的临时的空间叫做【局部命名空间】
    【内置命名空间】中存放了python解释器为我们提供的名字：input,print,str,list,tuple...它们都是我们熟悉的，拿过来就可以用的方法

具体参考地址：https://www.cnblogs.com/Eva-J/articles/7156261.html
"""

# python之禅
# import this

# 全局作用域：包含内置名称空间、全局名称空间，在整个文件的任意位置都能被引用、全局有效\
# 局部作用域：局部名称空间，只能在局部范围内生效

# 可执行 start
# print(globals())
# print(locals())
# 可执行 end

# nonlocal
# 说明：
#     1.外部必须有这个变量
#     2.在内部函数声明nonlocal变量之前不能再出现同名变量
#     3.内部修改这个变量如果想在外部有这个变量的第一层函数中生效

# -----start------
# def f1():
#     a = 1
#     def f2():
#         nonlocal a
#         a = 2
#     f2()
#     print('a in f1 : ',a)
#
# f1()
# ------end-----

# 函数名的本质
# 1.可以被引用
# 2.可以被当作容器类型的元素 如list,dict等
# 3.可以当作函数的参数和返回值


# 闭包函数
# 判断闭包函数的方法__closure__

# 简易闭包函数
# -----start-----
# def bib(f):
#     def func():
#         print("start")
#         f()
#         print("end")
#     return func
#
# def fu():
#     print('哈哈')
#
# func = bib(fu)
# func()
# -----end-----

# 复制粘贴使用，始终保持在最后
# ----- start -----
# -----  end  -----



